Добрый день!!!
Информация по баззам!!!





##### MySQL #####

sudo apt-get install mysql-server
sudo apt-get install mysql-client

sudo /etc/init.d/mysql status
sudo /etc/init.d/mysql restart
mysql -u root -p

CREATE DATABASE rabbitfarm;
CHARACTER SET utf-8 COLLATE utf8_unicode_ci;
USE rabbitfarm;
GRANT ALL ON rabbitfarm.* TO farmer@host IDENTIFIED BY 'farmer575';
exit

REVOKE ALL ON rabbitfarm.* FROM farmer@host;

CREATE TABLE rabbits (
    id int(30) NOT NUL auto_increment PRIMARY KEY,
    name VARCHAR(30),
    breedingdate DATE
) ENGINE MyISAM;


DESCRIBE rabbits;
ALTER TABLE rabbits CONVERT TO CHARACTER SET utf8 COLLATE utf8_general_ci;
SHOW VARIABLES;
SHOW VARIABLES LIKE '%character%';
SHOW VARIABLES LIKE '%collation%';
character_set_client   - кодировка поступления данных с клиентской стороны
             _database - кодировка используемая базой по умолчанию
             _results  - кодировка в которой сервер отправляет данные клиенту

             _server   - кодировка используемая по умолчанию на сревере

collation_connection   - представления ...

         _database     - ...
         _server       - ...


SHOW COLLATION LIKE 'utf8%';
SHOW CREATE TABLE rabbits; - информация о таблице
SET collation_server = utf8_unicode_ci; - для всех представлений





##### PostgreSQL #####

sudo apt-get install postgresql
sudo -u postgres postgresql

CREATE DATABASE rabbitfarm; (DROP DATABASE rabbitfarm);
CREATE USER farmer WITH password 'farmer575';
GRANT ALL ON DATABASE rabbitfarm TO farmer;
\q

psql -h localhost rabbitfarm farmer

CREATE TABLE rabbits (
    id SERIAL NOT NUL PRIMARY KEY,
    name VARCHAR(30),
    breedingdate DATE
);

\d rabbits - отобразить таблицу
\dt        - отобразить список таблиц
sudo apt-get install php5-pgsql
sudo service apache2 restart

$cb = new PDO('pgsql:host=localhost;port=5432;dname=rabbitsfarm;farmer;farmer575');
psql rabbitfarm < rabbitfarm.sql        - востановление из дампа

SELECT rolename FROM pg_roles - список существующих ролей
\du                           - список существующих ролей

LOGIN               - подключение
SUPERUSER           - суперпользователь

CREATEDB            - создавать базы
CREATEROLE          - создание ролей
REPLICATION LOGIN   - запуск репликации
PASSWORD            - установка пароля

ALTER ROLE farmer CREATEROLE CREATEDB
ALTER DATABASE  ### OWNER TO ###;       - изменить владельца базы
ALTER TABLE rabbits OWNER TO farmer;    - изменить владельца таблицы

GRANT yurist TO farmer;                 - включить в yurist для farmer ( в учетке postgres )





##### SQLite #####

sudo apt-get install sqlite
sudo apt-get install php5-sqlite 
sudo service apache2 restart

sqlite3 rabbitfarm                  - создание базы
.exit                               - выход из консоли

$cb = new PDO('sqlite:rabbitfarm'); - подключение к базе
CREATE TABLE rabbits (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name VARCHAR(70),
    birthdate DATE
);





##### MongoDB #####

sudo apt-get install mongodb        - устанавливаем базу
sudo service mongodb status         - перезапускаем 
sudo apt-get install php-pear       - устанавливаем PECL (установщик)
sudo apt-get install php-dev

sudo pecl install mongodb           - устанавливаем SASL [no]
* Apache2
    sudo nano /etc/php5/apache2/php.ini - редактируем
        extension=mongo.so              - добавляем
    sudo service apache2 restart        - перезапускаем ( phpinfo() )
* Bash
    sudo nano /etc/php5/cli/php.ini     - редактируем
        extension=mongo.so              - добавляем

$cm = new \MongoClient();                                // создаем соединение
$bas = $cm->cinema;                                     // подключаемся к базе, не обязательно должна быть создана заранее
$col = $bas->movies;                                    // подключаемся к коллекции, на таблицу похоже
$doc = array("title" => "Plane Crazy Mickey Mouse",     // создаем документ
             "time" => "6",
             "color" => "No");
$col->insert( $doc );                                   // вставляем документ

$document = $col->findOne();                            // получение одного документа
//var_dump( $document );
//echo $col->count();                                   // подсчет документов коллекции
$que = array('time' => "6");                            // установка критериев запроса
$csr = $col->find( $que );
while ( $csr->hasNext() ) {
    var_dump( $csr->getNext() );
}